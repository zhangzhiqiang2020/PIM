% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/oAttackDrug.r
\name{oAttackDrug}
\alias{oAttackDrug}
\title{Function to perform drug targets combinatory attack for an igraph object}
\usage{
oAttackDrug(ig, drug.nodes = NULL, drugs.fixed = NULL, combine.num = 1)
}
\arguments{
\item{ig}{an object of class "igraph" with node attribute 'name'.}

\item{drug.nodes}{a list containing drugs and their drugs target nodes combined for combinatorial attack.}

\item{drugs.fixed}{a vector of drug names that fixed with the other drugs for combinatorial attack.}

\item{combine.num}{the drug combinatorial strategies: 2, two drugs are combined; 3, three drugs are combined.}
}
\value{
a tibble with 4 columns, including 'drug', 'frac.disconnected' (fraction of network nodes disconnected from the giant component), 'frac.removed' (fraction of network nodes removed), 'nodes.removed' (nodes removed, provided separated by ',').
}
\description{
\code{oAttackDrug} is supposed to perform drug-based combinatory attack for an igraph object, where the effect of drug targets removal is defined as the fraction of network nodes disconnected from the giant component (the largest connected component) remained. There are two types of attack analysis: removing a single drug targets (accordingly we define the attackness per a drug), and removing drug targets in combinations (combinatorial attack, often used based on the concept of combinatorial optimisation). Also attackness for a drug is defined as the effect estimated when a single drug targets node removed.
}
\note{
none
}
\examples{
\dontrun{
drug.nodes <- pbapply::pblapply(drug_names,function(x){
DTT \%>\% transmute(drug=drug,Symbol=Symbol,phase=phase) \%>\%
group_by(drug,phase) \%>\% 
summarise(Targets=str_c(Symbol,collapse = ","),.groups = 'drop') \%>\% 
filter(drug==x,phase!=1,phase!=2) \%>\% 
pull(Targets) \%>\% str_split(",") \%>\% unlist() \%>\% unique() \%>\% 
intersect((subg \%>\% oIG2TB('nodes') \%>\% pull(name)))
})
names(drug.nodes) <- drug_names
# remove the null value 
id  <- sapply(drug.nodes,function(x) !identical(x,character(0)))
drug.nodes<- drug.nodes[id]
# attack by drugs
df <- pbapply::pblapply(1:3, function(x) {
oAttackDrug(subg,drug.nodes = drug.nodes,combine.num = x)
})
 }
}
\seealso{
\code{\link{oAttackDrug}}
}
